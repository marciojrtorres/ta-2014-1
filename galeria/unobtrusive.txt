    Separation of functionality (the "behavior layer") from a Web page's structure/content and presentation[1]
    Best practices to avoid the problems of traditional JavaScript programming (such as browser inconsistencies and lack of scalability)
    Progressive enhancement to support user agents that may not support advanced JavaScript functionality[2]

* Separação da lógica do comportamento da estrutura e conteúdo da página
* Evitar inconsistências dos browsers
* Melhoria Progressiva ou Degradação Elegante


    Usability: An unobtrusive DOM script does not draw the attention of the user - visitors use it without thinking about it.
    Graceful degradation: Unobtrusive DOM scripts never generate error messages, in any browser, even when they fail. If features cannot be presented properly, they silently disappear.
    Accessibility: If any script fails, the page still delivers its core functions and information via the markup, stylesheets and/or server-side scripting.
    Separation: For the benefit of other and future web developers, all JavaScript code is maintained separately, without impacting other files of script, markup or code.[12]

* Usabilidade: os scripts não devem aparecer para o usuário
* Degradar Elegantemente: se recursos não estiver presentes eles apenas não são disponibilizados, sem erros.
* Acessibilidade: se scripts falharem o conteúdo continua sendo servido via html/css.
* Separação: manter o código javascript separado da marcação, beneficiando a manutenção.